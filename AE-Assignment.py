from tabulate import tabulate
print("1.BJT\n2.MOSFET")
Trans_Type=input("ENTER THE TRANSISTOR TYPE(1or2):")
if(Trans_Type=="1"):
    print("BIAS TYPES\na.FIXED BIAS\nb.EMITTER BIAS\nc.VOLTAGE-DIVIDER BIAS\nd.COLLECTOR-FEEDBACK\ne.EMITTER-FOLLOWER\nf.COMMON-BASE")
    bias_type=input("ENTER THE BIAS TYPE(a or b or c or d or e or f):")
    if(bias_type=="a"):
        print("ENTER THE GIVEN VALUES:(PUT '0' IF THE VALUE IS NOT GIVEN)")
        Vbe=0.7
        Vcc=float(input("Vcc="))
        Rb=float(input("Rb="))
        Beta=float(input("Beta="))
        Ic=float(input("Ic="))
        Rc=float(input("Rc="))
        Vce=float(input("Vce="))
        Ib=float(input("Ib="))
        Vb=float(input("Vb="))
        Vc=float(input("Vc="))
        Vbc=float(input("Vbc="))
        if(Vcc==0):
            Vcc=Vcc
            Vcc=round(Vcc,2)
        else:
            Vcc=Vcc
        if(Rb==0):
            Rb=Rb
            Rb=round(Rb,2)
        else:
            Rb=Rb
        if(Ib==0):
            Ib=((Vcc-Vbe)/Rb)*1000
            Ib=round(Ib,2)
        else:
            Ib=Ib
        if(Ic==0):
            Ic=(Beta*Ib)/1000
            Ic=round(Ic,2)
        else:
            Ic=Ic
        if(Vce==0):
            Vce=Vcc-(Ic*Rc)
            Vce=round(Vce,2)
        else:
            Vce=Vce
        if(Vc==0):
            Vc=Vce
            Vc=round(Vc,2)
        else:
            Vc=Vc
        if(Vb==0):
            Vb=Vbe
            Vb=round(Vb,2)
        else:
            Vb=Vb
        if(Vbc==0):
            Vbc=Vb-Vc
            Vbc=round(Vbc,2)
        else:
            Vbc=Vbc
        table=[["Parameter","Value","Unit"],
           ["Vcc",Vcc,"V"],["Rb",Rb,"kohm"],["Beta",Beta,"."],["Ic",Ic,"mA"],["Rc",Rc,"kohm"],["Re",Re,"kohm"],["Vce",Vce,"V"],["Ib",Ib,"mA"],["Vb",Vb,"V"],["Vc",Vc,"V"],["Vbc",Vbc,"V"]]
        print(tabulate(table, headers='firstrow',tablefmt='fancy_grid'))
    if(bias_type=="b"):
        print("ENTER THE GIVEN VALUES:(PUT '0' IF THE VALUE IS NOT GIVEN)")
        Vbe=0.7
        Vcc=float(input("Vcc="))
        Rb=float(input("Rb="))
        Beta=float(input("Beta="))
        Ic=float(input("Ic="))
        Rc=float(input("Rc="))
        Re=float(input("Re="))
        Vce=float(input("Vce="))
        Ib=float(input("Ib="))
        Ve=float(input("Ve="))
        Vb=float(input("Vb="))
        Vc=float(input("Vc="))
        Vbc=float(input("Vbc="))
        if(Vcc==0):
            Vcc=Vcc
            Vcc=round(Vcc,2)
        else:
            Vcc=Vcc
        if(Rb==0):
            Rb=Rb
            Rb=round(Rb,2)
        else:
            Rb=Rb
        if(Ib==0):
            Ib=((Vcc-Vbe)/(Rb+((Beta+1)*Re)))*1000
            Ib=round(Ib,2)
        else:
            Ib=Ib
        if(Ic==0):
            Ic=(Beta*Ib)/1000
            Ic=round(Ic,2)
        else:
            Ic=Ic
        if(Vce==0):
            Vce=Vcc-(Ic*(Rc+Re))
            Vce=round(Vce,2)
        else:
            Vce=Vce
        if(Vc==0):
            Vc=Vcc-(Ic*Rc)
            Vc=round(Vc,2)
        else:
            Vc=Vc
        if(Ve==0):
            Ve=Vc-Vce
            Ve=round(Ve,2)
        else:
            Ve=Ve
        if(Vb==0):
            Vb=Vbe+Ve
            Vb=round(Vb,2)
        else:
            Ve=Ve
        if(Vbc==0):
            Vbc=Vb-Vc
            Vbc=round(Vbc,2)
        else:
            Vbc=Vbc
        table=[["Parameter","Value","Unit"],
           ["Vcc",Vcc,"V"],["Rb",Rb,"kohm"],["Beta",Beta,"."],["Ic",Ic,"mA"],["Rc",Rc,"kohm"],["Re",Re,"kohm"],["Vce",Vce,"V"],["Ib",Ib,"mA"],["Vb",Vb,"V"],["Vc",Vc,"V"],["Vbc",Vbc,"V"]]
        print(tabulate(table, headers='firstrow',tablefmt='fancy_grid'))
    if(bias_type=="c"):
        print("ENTER THE GIVEN VALUES:(PUT '0' IF THE VALUE IS NOT GIVEN)")
        Vbe=0.7
        Vcc=float(input("Vcc="))
        R1=float(input("R1="))
        R2=float(input("R2="))
        Beta=float(input("Beta="))
        Ic=float(input("Ic="))
        Rc=float(input("Rc="))
        Re=float(input("Re="))
        Vce=float(input("Vce="))
        Ib=float(input("Ib="))
        Ve=float(input("Ve="))
        Ie=float(input("Ie="))
        Vb=float(input("Vb="))
        Vc=float(input("Vc="))
        Vbc=float(input("Vbc="))
        Rth=float(input("Rth="))
        Eth=float(input("Eth="))
        if(Rth==0):
            Rth=(R1*R2)/(R1+R2)
            Rth=round(Rth,2)
        else:
            Rth=Rth
        if(Eth==0):
            Eth=(R2*Vcc)/(R1+R2)
            Eth=round(Eth,2)
        else:
            Eth=Eth
        if(Vcc==0):
            Vcc=Vcc
            Vcc=round(Vcc,2)
        else:
            Vcc=Vcc
        if(R1==0):
            R1=R1
            R1=round(R1,2)
        else:
            R1=R1
        if(R2==0):
            R2=R2
            R2=round(R2,2)
        else:
            R2=R2
        if(Ib==0):
            Ib=((Eth-Vbe)/(Rth+((Beta+1)*Re)))
            Ib=round(Ib,2)
        else:
            Ib=Ib
        if(Ic==0):
            Ic=(Beta*Ib)/1000
            Ic=round(Ic,2)
        else:
            Ic=Ic
        if(Vce==0):
            Vce=Vcc-(Ic*(Rc+Re))
            Vce=round(Vce,2)
        else:
            Vce=Vce
        if(Vc==0):
            Vc=Vcc-(Ic*Rc)
            Vc=round(Vc,2)
        else:
            Vc=Vc
        if(Vb==0):
            Vb=(R2*Vcc)/(R1+R2)
            Vb=round(Vb,2)
        else:
            Vb=Vb
        if(Ve==0):
            Ve=Vb-Vbe
            Ve=round(Ve,2)
        else:
            Ve=Ve
        if(Ie==0):
            Ie=Ve/Re
            Ie=round(Ie,2)
        else:
            Ie=Ie
        if(Vbc==0):
            Vbc=Vb-Vc
            Vbc=round(Vbc,2)
        else:
            Vbc=Vbc
        table=[["Parameter","Value","Unit"],
           ["Vcc",Vcc,"V"],["R1",R1,"kohm"],["R2",R2,"kohm"],["Beta",Beta,"."],["Ic",Ic,"mA"],["Rc",Rc,"kohm"],["Re",Re,"kohm"],["Ie",Ie,"mA"],["Vce",Vce,"V"],["Ib",Ib,"A"],["Vb",Vb,"V"],["Vc",Vc,"V"],["Vbc",Vbc,"V"]]
        print(tabulate(table, headers='firstrow',tablefmt='fancy_grid'))
    if(bias_type=="d"):
        print("ENTER THE GIVEN VALUES:(PUT '0' IF THE VALUE IS NOT GIVEN)")
        Vbe=0.7
        Vcc=float(input("Vcc="))
        Rf=float(input("Rf="))
        Beta=float(input("Beta="))
        Ic=float(input("Ic="))
        Rc=float(input("Rc="))
        Re=float(input("Re="))
        Vce=float(input("Vce="))
        Ib=float(input("Ib="))
        Ve=float(input("Ve="))
        Vb=float(input("Vb="))
        Vc=float(input("Vc="))
        Vbc=float(input("Vbc="))
        if(Vcc==0):
            Vcc=Vcc
            Vcc=round(Vcc,2)
        else:
            Vcc=Vcc
        if(Rf==0):
            Rf=Rf
            Rf=round(Rf,2)
        else:
            Rf=Rf
        if(Ib==0):
            Ib=((Vcc-Vbe)/(Rf+(Beta*(Rc+Re))))*1000
            Ib=round(Ib,2)
        else:
            Ib=Ib
        if(Ic==0):
            Ic=(Beta*Ib)/1000
            Ic=round(Ic,2)
        else:
            Ic=Ic
        if(Vce==0):
            Vce=Vcc-(Ic*(Rc+Re))
            Vce=round(Vce,2)
        else:
            Vce=Vce
        if(Vc==0):
            Vc=Vcc-(Ic*Rc)
            Vc=round(Vc,2)
        else:
            Vc=Vc
        if(Ve==0):
            Ve=Vc-Vce
            Ve=round(Ve,2)
        else:
            Ve=Ve
        if(Vb==0):
            Vb=Vbe+Ve
            Vb=round(Vb,2)
        else:
            Ve=Ve
        if(Vbc==0):
            Vbc=Vb-Vc
            Vbc=round(Vbc,2)
        else:
            Vbc=Vbc
        table=[["Parameter","Value","Unit"],
           ["Vcc",Vcc,"V"],["Rf",Rf,"kohm"],["Beta",Beta,"."],["Ic",Ic,"mA"],["Rc",Rc,"kohm"],["Re",Re,"kohm"],["Vce",Vce,"V"],["Ib",Ib,"mA"],["Vb",Vb,"V"],["Vc",Vc,"V"],["Vbc",Vbc,"V"]]
        print(tabulate(table, headers='firstrow',tablefmt='fancy_grid'))
if(Trans_Type=="2"):
    print("BIAS TYPES\na.FIXED BIAS(depletion)\nb.FEEDBACK CONFIGURATION(enhancement)")
    bias_type=input("ENTER THE BIAS TYPE(a or b):")
    if(bias_type=="a"):
        Idss=float(input("Idss="))
        Vp=float(input("Vp="))
        Vgs=float(input("Vgs="))
        Vg=float(input("Vgg="))
        Vds=float(input("Vds="))
        Vdd=float(input("Vdd="))
        Id=float(input("Id="))
        Rs=float(input("Rs="))
        R1=float(input("R1="))
        R2=float(input("R2="))
        Vg=(R2*Vdd)/(R2+R1)
        Id=(Idss*((1-(Vgs/Vp))*(1-(Vgs/Vp))))
        Vgs=Vg-(Id*Rs)
        Vds=Vdd-(Id*Rs)
        print("Vgs=",Vgs,"\n","Id=",Id,"\n","Vds=",Vds)
    if(bias_type=="b"):
        Idss=float(input("Idss="))
        Vp=float(input("Vp="))
        Vgs=float(input("Vgs="))
        Vgg=float(input("Vgg="))
        Vds=float(input("Vds="))
        Vdd=float(input("Vdd="))
        Id=float(input("Id="))
        Rs=float(input("Rs="))
        Vds=Vdd-(Id*Rs)
        Vgs=Vds
        print("Vgs=",Vgs,"\n","Id=",Id,"\n","Vds=",Vds)
    
